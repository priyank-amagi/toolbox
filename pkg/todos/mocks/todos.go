// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	todos "github.com/priyank-amagi/toolbox/pkg/todos"
)

// ITodoSvc is an autogenerated mock type for the ITodoSvc type
type ITodoSvc struct {
	mock.Mock
}

type ITodoSvc_Expecter struct {
	mock *mock.Mock
}

func (_m *ITodoSvc) EXPECT() *ITodoSvc_Expecter {
	return &ITodoSvc_Expecter{mock: &_m.Mock}
}

// GetTodos provides a mock function with given fields:
func (_m *ITodoSvc) GetTodos() ([]todos.Todo, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetTodos")
	}

	var r0 []todos.Todo
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]todos.Todo, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []todos.Todo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]todos.Todo)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ITodoSvc_GetTodos_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTodos'
type ITodoSvc_GetTodos_Call struct {
	*mock.Call
}

// GetTodos is a helper method to define mock.On call
func (_e *ITodoSvc_Expecter) GetTodos() *ITodoSvc_GetTodos_Call {
	return &ITodoSvc_GetTodos_Call{Call: _e.mock.On("GetTodos")}
}

func (_c *ITodoSvc_GetTodos_Call) Run(run func()) *ITodoSvc_GetTodos_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ITodoSvc_GetTodos_Call) Return(_a0 []todos.Todo, err error) *ITodoSvc_GetTodos_Call {
	_c.Call.Return(_a0, err)
	return _c
}

func (_c *ITodoSvc_GetTodos_Call) RunAndReturn(run func() ([]todos.Todo, error)) *ITodoSvc_GetTodos_Call {
	_c.Call.Return(run)
	return _c
}

// NewITodoSvc creates a new instance of ITodoSvc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewITodoSvc(t interface {
	mock.TestingT
	Cleanup(func())
}) *ITodoSvc {
	mock := &ITodoSvc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
